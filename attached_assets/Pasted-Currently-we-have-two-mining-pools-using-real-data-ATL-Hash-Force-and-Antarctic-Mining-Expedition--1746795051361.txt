Currently, we have two mining pools using real data (ATL Hash Force and Antarctic Mining Expedition). The rest are using fake data with fake API endpoints. I would like to clean up the way that the meetups/mining-pools are defined. I want to more cleanly separate test data from real data.

Here is one of your test meetups / mining pools for reference:

```
{
        name: "Tokyo Bitcoin Hub",
        country: "Japan",
        city: "Tokyo",
        latitude: 35.6895,
        longitude: 139.6917,
        description: "Tokyo Bitcoin Hub is a ...",
        hashrate: "23.4 PH/s",
        rank: 3,
        workers: 142,
        avatar: "https://images.unsplash.com/photo...",
        website: "https://tokyobitcoinhub.com",
        twitter: "https://twitter.com/tokyobtc",
        nostr: "npub1t0ky0hub...",
        hashHistory: [40, 60, 45, 55, 65, 70, 90],
        createdAt: new Date().toISOString(),
        poolApiUrl: "http://pool.tokyobitcoin.jp:3334",
        isActive: true
}
```


For all meetups/mining pools: the rank property needs to go away entirely. Instead, rank should be dynamically calculated based on the hashrate of each meetup. The createdAt property should be a hardcoded date/time, in a string format.

For only the test meetups/mining pools: remove the poolApiUrl prop, as this will return nothing useful. Instead, add a testData prop which contains hashrate, workers, and hashhistory.

For only the real meetups/mining pools: remove hashrate, workers, and hashhistory. These are not needed since we can get this from their APIs.

Here is an example of a new test meetup/miningpool:
```
{
        name: "Tokyo Bitcoin Hub",
        country: "Japan",
        city: "Tokyo",
        latitude: 35.6895,
        longitude: 139.6917,
        description: "Description of meetup...",
        avatar: "https://images.unsplash.com/photo...",
        website: "https://tokyobitcoinhub.com",
        twitter: "https://twitter.com/tokyobtc",
        nostr: "npub1t0ky0hub...",
        createdAt: '2025-01-01 00:00:00',
        testData: {
            hashrate: "23.4 PH/s",
            workers: 142,
            hashHistory: [40, 60, 45, 55, 65, 70, 90],
        },
        isActive: true
}
```


Make sure to update4 the UI to work with this new data structure.